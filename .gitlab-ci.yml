# Use our docker with boost built
image: registry.gitlab.com/manchester_qbi/manchester_qbi_public/madym_cxx

stages:
  - fetch-version
  - build
  - test
  - build_dist
  - deploy
  - release

before_script:
  - git fetch --tags

fetch-semantic-version:
  # Requires Node >= 10.13 version
  image: node:13
  stage: fetch-version
  only:
    refs:
    - master
    - /^release-.*$/
  script:
    - npm install @semantic-release/gitlab @semantic-release/exec @semantic-release/changelog
    - npx semantic-release --generate-notes false --dry-run
  artifacts:
    paths:
    - VERSION.txt

generate-non-semantic-version:
  stage: fetch-version
  except:
    refs:
    - master
    - /^release-.*$/
  script:
    - echo build-$CI_PIPELINE_ID > VERSION.txt
  artifacts:
    paths:
    - VERSION.txt

build:
  stage: build
  script:
    - echo "This job builds madym"
    - mkdir -p build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Debug ..
    - make
    - echo "Semantic version is $(cat VERSION.txt)"
    - echo "Madym version is $(bin/madym_DCE -v)"
  cache:
    key: ${CI_BUILD_REF_NAME}
    paths:
      - build/
  artifacts:
    paths:
    - build/
    expire_in: 1 week
  only:
    - merge_requests
    - /^release-.*$/

test:
  stage: test
  script:
    - ls
    - cd build
    - ctest --verbose
  only:
    - merge_requests
    - /^[0-9]+-[0-9]+-release$/

build_dist:
  stage: build_dist
  script:
    - echo "This job builds madym for distribution"
    - mkdir dist
    - cd dist
    - cmake -DCMAKE_BUILD_TYPE=Debug ..
    - make
  artifacts:
    paths:
      - dist/
  only:
  - /^[0-9]+-[0-9]+-release$/

#deploy:
#  stage: deploy
#  script: 
#    - echo "Deploying code"
#    - echo "Do something with the stuff in /dist"
#  environment:
#    name: staging
#    url: https://staging.example.com
#  only:
#    - /^[0-9]+-[0-9]+-release$/

#release:
#  image: node:13
#  stage: release
#  only:
#    refs:
#    - master
#    - alpha
#    # This matches maintenance branches
#    - /^[0-9]+-[0-9]+-release$/
#  script:
#    - touch CHANGELOG.md
#    - npm install @semantic-release/gitlab @semantic-release/exec @semantic-release/changelog
#    - npx semantic-release
#  artifacts:
#    paths:
#    - CHANGELOG.md
  