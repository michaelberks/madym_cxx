# Use our docker with boost built
image: registry.gitlab.com/manchester_qbi/manchester_qbi_public/madym_cxx/madym_depends

stages:
  - fetch-version
  - build
  - test
  - build_dist
  - deploy

before_script:
  - git fetch --tags

fetch-semantic-version:
  # Requires Node >= 10.13 version
  image: node:13
  stage: fetch-version
  only:
    refs:
    - master
    - /^release-.*$/
  script:
    - npm install @semantic-release/gitlab @semantic-release/exec @semantic-release/changelog
    - npx semantic-release

build:
  stage: build
  script:
    - echo "This job builds madym in debug configuration for testing"
    - mkdir -p build
    - cmake 
        -D CMAKE_BUILD_TYPE=Debug 
        -D BUILD_DOCUMENTATION=ON 
        -D BUILD_INSTALL=OFF 
        -D BUILD_QT_GUI=ON 
        -D BUILD_SHARED_LIBS=ON 
        -D BUILD_TESTING=ON 
        -D BUILD_TOOLS=ON 
        -D BUILD_WITH_DCMTK=ON 
        -D BUILD_WITH_ZLIB=ON 
        -S ../madym_cxx 
        -B build
    - cd build
    - ls
    - make
    - echo "Madym version is $(bin/madym_DCE -v)"
  cache:
    paths:
      - build/
  artifacts:
    paths:
    - build/
    expire_in: 1 week
  only:
    - master
    - merge_requests
    - /^release-.*$/

test:
  stage: test
  script:
    - echo "This job tests madym in debug configuration"
    - cd build
    - ctest --verbose
  only:
    - master
    - merge_requests
    - /^release-.*$/

build_dist_deb:
  stage: build_dist
  script:
    - echo "This job builds madym in release configuration for distribution as a debian package for ubuntu"
    - mkdir dist
    - cmake \
        -D CMAKE_C_COMPILER=$CC
        -D CMAKE_CXX_COMPILER=$CXX
        -D CMAKE_BUILD_TYPE=Release
        -D BUILD_DOCUMENTATION=OFF
        -D BUILD_INSTALL=ON
        -D BUILD_QT_GUI=ON
        -D BUILD_SHARED_LIBS=ON
        -D BUILD_TESTING=ON
        -D BUILD_TOOLS=ON
        -D BUILD_WITH_DCMTK=ON
        -D BUILD_WITH_ZLIB=ON
        -S ../madym_cxx
        -B dist
    - cd dist
    - make all
    - ctest --verbose
    - make install
    - make package
  cache:
    paths:
      - dist/
  artifacts:
    paths:
      - 'dist/madym_v*.deb'
      - 'dist/madym_v*.tar.gz'
  only:
  - /^release-.*$/

pages:
  stage: deploy
  script:
  - doxygen build/doxyfile
  - mv build/docs/html/ public/
  - cp madym_lrg.png public/
  - mkdir public/binary_installers
  - ls dist
  - cp -r dist/ public/binary_installers/
  artifacts:
    paths:
    - public
  only:
    - /^release-.*$/

#Abandoning the windows build for now - we can't use our own docker image unless
#we call docker pull, but this takes >1hr. Can try again if GitLab provides proper
#windows support    
build_dist_win:
  tags: 
    - windows
  stage: build_dist
  script:
    - "docker pull registry.gitlab.com/manchester_qbi/manchester_qbi_public/madym_cxx/madym_depends_win:latest"
    - "docker run -v %cd%:%cd% -w %cd% registry.gitlab.com/manchester_qbi/manchester_qbi_public/madym_cxx/madym_depends_win"
    - echo "This job builds madym in release configuration for distribution as an MSI installer for windows"
    - cd
    - dir C:/
    - echo %path%
    - '"C:/Program Files (x86)/Microsoft Visual Studio/2019/BuildTools/VC/Auxiliary/Build/vcvars64.bat"'
    - echo %path%
    - mkdir dist
    - cmake -C C:/CMake/initialCache.txt -S ../madym_cxx -B dist
    - cd dist
    - cmake --build . --config Release
    - cmake --install . --config Release
    - cpack .
    - exit
  needs: []
  dependencies: []
  artifacts:
    paths:
      - 'dist/madym_v*.exe'
      - 'dist/madym_v*.zip'
  only:
    - /^win_release-.*$/
  
